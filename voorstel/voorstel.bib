% Encoding: UTF-8

 
@Misc{Hill2023,
  author   = {Hill, Damian},
  date     = {2023-09},
  title    = {Python — {A} {Versatile} {Programming} {Language} for {AI} and {Data} {Science}},
  language = {en},
  url      = {https://medium.com/@damian.hill/python-a-versatile-programming-language-for-ai-and-data-science-9f03bb99e22b},
  urldate  = {2023-12-06},
  abstract = {In recent years, the field of artificial intelligence (AI) and data science has been rapidly growing, and Python has emerged as one of the most popular programming languages for these domains…},
}

@Article{Shaw2021,
  author       = {Shaw, Clarissa and Gordon, Jean},
  date         = {2021-07-03},
  journaltitle = {Innovation in Aging},
  title        = {Understanding Elderspeak: An Evolutionary Concept Analysis},
  doi          = {10.1093/geroni/igab023},
  volume       = {5},
  abstract     = {Background and Objectives
Elderspeak is an inappropriate simplified speech register that sounds like baby talk and is used with older adults, especially in healthcare settings. Understanding the concept of elderspeak is challenging due to varying views about which communicative components constitute elderspeak and whether elderspeak is beneficial or harmful for older adults.

Research Design and Methods
Rodgers’ evolutionary concept analysis method was used to evaluate the concept of elderspeak through identification of elderspeak’s attributes, antecedents, and consequences. A systematic search using the {PubMed}, {CINAHL}, {PsycINFO}, and Embase databases was completed.

Results
Eighty-three theoretical or research articles from 1981 to 2020 were identified. Elderspeak characteristics were categorized by semantic, syntactic, pragmatic, paralinguistic, and nonverbal attributes. The primary antecedent to elderspeak is implicit ageism, in which old age cues and signs of functional or cognitive impairment led to simplified communication, usually from a younger caregiver. Research studies varied in reporting whether elderspeak facilitated or interfered with comprehension by older adults, in part depending on the operational definition of elderspeak and experimental manipulations. Exaggerated prosody, a key feature of elderspeak, was found to reduce comprehension. Elderspeak was generally perceived as patronizing by older adults and speakers were perceived as less respectful. In persons with dementia, elderspeak also increases the probability of resistiveness to care, which is an important correlate of behavioral and psychological symptoms of dementia.

Discussion and Implications
Based on this concept analysis, a new definition of elderspeak is proposed, in which attributes that have been found to enhance comprehension are differentiated from those that do not. Recommendations for consistent operationalization of elderspeak in future research are made.},
  file         = {Full Text PDF:files/9/Shaw and Gordon - 2021 - Understanding Elderspeak An Evolutionary Concept .pdf:application/pdf},
  shorttitle   = {Understanding Elderspeak},
}

@Online{Vlaanderen.be,
  author     = {Vlaanderen.be},
  date       = {2023-07-05},
  editor     = {5 juli 2023},
  title      = {Bevolking naar leeftijd en geslacht},
  url        = {https://www.vlaanderen.be/statistiek-vlaanderen/bevolking/bevolking-naar-leeftijd-en-geslacht},
  titleaddon = {www.vlaanderen.be},
  urldate    = {2023-12-14},
  file       = {Snapshot:files/17/bevolking-naar-leeftijd-en-geslacht.html:text/html},
  langid     = {dutch},
}

@Article{OConnor2023,
  author     = {Ryan O'Connor},
  date       = {2023-06-15},
  title      = {How to evaluate Speech Recognition models},
  titleaddon = {News, Tutorials, {AI} Research},
  url        = {https://www.assemblyai.com/blog/how-to-evaluate-speech-recognition-models/},
  urldate    = {2023-12-14},
  abstract   = {Speech Recognition models are key in extracting useful information from audio data. Learn how to properly evaluate speech recognition models in this easy-to-follow guide.},
  file       = {Snapshot:files/21/how-to-evaluate-speech-recognition-models.html:text/html},
  langid     = {english},
}

@Article{IBM,
  author     = {IBM},
  title      = {What is Speech Recognition? {\textbar} {IBM}},
  url        = {https://www.ibm.com/topics/speech-recognition},
  urldate    = {2023-12-14},
  abstract   = {Learn about the history of speech recognition and its various applications in the world today.},
  langid     = {english},
  shorttitle = {What is Speech Recognition?},
}

@InReference{WER2023,
  author    = {Wikipedia},
  booktitle = {Wikipedia},
  date      = {2023-09-04},
  title     = {Word error rate},
  note      = {Page Version {ID}: 1173834885},
  url       = {https://en.wikipedia.org/w/index.php?title=Word_error_rate&oldid=1173834885},
  urldate   = {2023-12-14},
  abstract  = {Word error rate ({WER}) is a common metric of the performance of a speech recognition or machine translation system.
The general difficulty of measuring performance lies in the fact that the recognized word sequence can have a different length from the reference word sequence (supposedly the correct one). The {WER} is derived from the Levenshtein distance, working at the word level instead of the phoneme level. The {WER} is a valuable tool for comparing different systems as well as for evaluating improvements within one system. This kind of measurement, however, provides no details on the nature of translation errors and further work is therefore required to identify the main source(s) of error and to focus any research effort.
This problem is solved by first aligning the recognized word sequence with the reference (spoken) word sequence using dynamic string alignment. Examination of this issue is seen through a theory called the power law that states the correlation between perplexity and word error rate.Word error rate can then be computed as:

  
    
      
        
          
            W
            E
            R
          
        
        =
        
          
            
              S
              +
              D
              +
              I
            
            N
          
        
        =
        
          
            
              S
              +
              D
              +
              I
            
            
              S
              +
              D
              +
              C
            
          
        
      
    
    \{{\textbackslash}displaystyle \{{\textbackslash}mathit \{{WER}\}\}=\{{\textbackslash}frac \{S+D+I\}\{N\}\}=\{{\textbackslash}frac \{S+D+I\}\{S+D+C\}\}\}
  where

S is the number of substitutions,
D is the number of deletions,
I is the number of insertions,
C is the number of correct words,
N is the number of words in the reference (N=S+D+C)The intuition behind 'deletion' and 'insertion' is how to get from the reference to the hypothesis. So if we have the reference "This is wikipedia" and hypothesis "This \_ wikipedia", we call it a deletion.
When reporting the performance of a speech recognition system, sometimes word accuracy ({WAcc}) is used instead:

  
    
      
        
          
            W
            A
            c
            c
          
        
        =
        1
        −
        
          
            W
            E
            R
          
        
        =
        
          
            
              N
              −
              S
              −
              D
              −
              I
            
            N
          
        
        =
        
          
            
              C
              −
              I
            
            N
          
        
      
    
    \{{\textbackslash}displaystyle \{{\textbackslash}mathit \{{WAcc}\}\}=1-\{{\textbackslash}mathit \{{WER}\}\}=\{{\textbackslash}frac \{N-S-D-I\}\{N\}\}=\{{\textbackslash}frac \{C-I\}\{N\}\}\}
  Note that since N is the number of words in the reference, the word error rate can be larger than 1.0, and thus, the word accuracy can be smaller than 0.0.},
  file      = {Snapshot:files/25/Word_error_rate.html:text/html},
  langid    = {english},
  rights    = {Creative Commons Attribution-{ShareAlike} License},
}

@Online{Gevirtz2018,
  author     = {Morris Gevirtz},
  date       = {2018-04-11},
  title      = {What is Word Error Rate ({WER})? - Deepgram Blog ⚡️},
  url        = {https://deepgram.com/learn/what-is-word-error-rate},
  titleaddon = {Deepgram},
  urldate    = {2023-12-14},
  abstract   = {Learn all about what word error rate is, what it means, and how it's calculated here....},
  file       = {Snapshot:files/27/what-is-word-error-rate.html:text/html},
  langid     = {english},
  shorttitle = {What is Word Error Rate ({WER})?},
}

@InReference{WikipediaJW2023,
  author    = {Wikipedia},
  booktitle = {Wikipedia},
  date      = {2023-05-25},
  title     = {Jaro–Winkler distance},
  note      = {Page Version {ID}: 1156974132},
  url       = {https://en.wikipedia.org/w/index.php?title=Jaro%E2%80%93Winkler_distance&oldid=1156974132},
  urldate   = {2023-12-14},
  abstract  = {In computer science and statistics, the Jaro–Winkler similarity is a string metric measuring an edit distance between two sequences. It is a variant of the Jaro distance metric metric (1989, Matthew A. Jaro) proposed in 1990 by William E. Winkler.The Jaro–Winkler distance uses a prefix scale 
  
    
    
  .
The higher the Jaro–Winkler distance for two strings is, the less similar the strings are. The score is normalized such that 0 means an exact match and 1 means there is no similarity. The original paper actually defined the metric in terms of similarity, so the distance is defined as the inversion of that value (distance = 1 − similarity).
Although often referred to as a distance metric, the Jaro–Winkler distance is not a metric in the mathematical sense of that term because it does not obey the triangle inequality.},
  file      = {Snapshot:files/29/Jaro–Winkler_distance.html:text/html},
  langid    = {english},
  rights    = {Creative Commons Attribution-{ShareAlike} License},
}

@Online{DocsGoogle,
  author     = {Google},
  title      = {Speech-to-Text: Automatic Speech Recognition},
  url        = {https://cloud.google.com/speech-to-text/},
  titleaddon = {Google Cloud},
  urldate    = {2023-12-14},
  abstract   = {Accurately convert voice to text in over 125 languages and variants by applying Google’s powerful machine learning models with an easy-to-use {API}.},
  file       = {Snapshot:files/31/speech-to-text.html:text/html},
  langid     = {english},
  shorttitle = {Speech-to-Text},
}

@Online{DocsAssemblyai,
  author   = {AssemblyAI},
  title    = {Home {\textbar} {AssemblyAI} Docs},
  url      = {https://www.assemblyai.com/docs/},
  urldate  = {2023-12-14},
  abstract = {Get oriented with the {AssemblyAI} {API}},
  file     = {Snapshot:files/33/docs.html:text/html},
  langid   = {english},
}

@Article{Raghavan2022,
  author       = {Raghavan, Vivek},
  date         = {2022-01-01},
  journaltitle = {{ArXiv}},
  title        = {Is Word Error Rate a good evaluation metric for Speech Recognition in Indic Languages?},
  url          = {https://www.academia.edu/93401304/Is_Word_Error_Rate_a_good_evaluation_metric_for_Speech_Recognition_in_Indic_Languages},
  urldate      = {2024-02-06},
  abstract     = {We propose a new method for the calculation of error rates in Automatic Speech Recognition ({ASR}). This new metric is for languages that contain half characters and where the same character can be written in different forms. We implement our},
  file         = {Snapshot:files/40/Is_Word_Error_Rate_a_good_evaluation_metric_for_Speech_Recognition_in_Indic_Languages.html:text/html},
  langid       = {english},
}

@Article{Brinardi2017,
  author       = {Leonardo, Brinardi and Hansun, Seng},
  date         = {2017-02-01},
  journaltitle = {Indonesian Journal of Electrical Engineering and Computer Science},
  title        = {Text Documents Plagiarism Detection using Rabin-Karp and Jaro-Winkler Distance Algorithms},
  doi          = {10.11591/ijeecs.v5.i2.pp462-471},
  pages        = {462--471},
  volume       = {5},
  abstract     = {Plagiarism is an act that is considered by the university as a fraud by taking someone ideas or writings without mentioning the references and claimed as his own. Plagiarism detection system is generally implement string matching algorithm in a text document to search for common words between documents. There are some algorithms used for string matching, two of them are Rabin-Karp and Jaro-Winkler Distance algorithms. Rabin-Karp algorithm is one of compatible algorithms to solve the problem of multiple string patterns, while, Jaro-Winkler Distance algorithm has advantages in terms of time. A plagiarism detection application is developed and tested on different types of documents, i.e. doc, docx, pdf and txt. From the experimental results, we obtained that both of these algorithms can be used to perform plagiarism detection of those documents, but in terms of their effectiveness, Rabin-Karp algorithm is much more effective and faster in the process of detecting the document with the size more than 1000 {KB}. © 2017 Institute of Advanced Engineering and Science. All rights reserved.},
  file         = {Full Text PDF:files/43/Leonardo and Hansun - 2017 - Text Documents Plagiarism Detection using Rabin-Ka.pdf:application/pdf},
}

@Comment{jabref-meta: databaseType:biblatex;}
